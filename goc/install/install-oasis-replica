#!/bin/bash
# Install and configure all application software on oasis-replica
#
# Mounts a directory on a large shared filesystem at /srv, and everything
#  that needs lots of space or needs to be retained across reinstalls is
#   put there.  In particular that is:
#   /srv/cvmfs -- the cvmfs replicas data default location
#   /etc/awstats/password-file -- the password used for uploading squid log
#	statistics to the WLCG squid monitor, copied from /srv/etc/awstats
#   /var/log/cvmfs -- logs from cvmfs crons, symlinked to /srv/log/cvmfs
#   /var/log/httpd -- apache logs, symlinked to /srv/log/httpd
#   /var/log/squid -- squid logs, symlinked to /srv/log/squid
#
# Initial version written by Dave Dykstra 2-4-2015

MYSHORTNAME="`hostname -s`"
case "$MYSHORTNAME" in
    oasis-replica|oasis-replica-itb);;
    *)  echo "Only run this on oasis-replica or oasis-replica-itb"
	exit 2
	;;
esac

set -ex

SCRIPTDIR="`dirname $0`"
if [ "$SCRIPTDIR" = "." ]; then
    SCRIPTDIR="`pwd`"
fi
cd

# puppet sometimes returns error code if it is already running, ignore it
case "$MYSHORTNAME" in
    *-itb)
	puppet agent -t --environment=testing || true
	;;
    *)
	puppet agent -t || true
	;;
esac

ARCH=`arch`
AUFSRPM=aufs-0.20090202.cvs-6.sl5.src.rpm
CVMFSRELRPM=cvmfs-release-2-4.el5.noarch.rpm
CVMFSVER=2.2.1
CVMFSRPM=cvmfs-$CVMFSVER-1.el5.$ARCH.rpm
CVMFSSERVERRPM=cvmfs-server-$CVMFSVER-1.el5.$ARCH.rpm
CVMFSCONFIGRPM=cvmfs-config-default-1.2-2.noarch.rpm
CVMFSSERVERMONRPM=cvmfs-servermon-1.1-1.el5.noarch.rpm
FRONTIERRELRPM=frontier-release-1.1-1.noarch.rpm
SQUIDRPM=frontier-squid-2.7.STABLE9-22.1.$ARCH.rpm
AWSTATSRPM=frontier-awstats-6.9-3.1.noarch.rpm
OASISVER=2.1.4
OASISSUBVER=1.osg32.el5
OASISRPM=oasis-goc-$OASISVER-$OASISSUBVER.noarch.rpm
OASISRPM2=oasis-goc-replica-$OASISVER-$OASISSUBVER.noarch.rpm

PATH="$PATH:/sbin"

# import OSG key because we'll be directly downloading oasis rpm
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-OSG

# download, build, and install aufs
wget -q -N "http://ftp.scientificlinux.org/linux/scientific/5x/SRPMS/SL/$AUFSRPM"
mkdir -p /usr/src/redhat/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
rpm -i $AUFSRPM
rm $AUFSRPM
# note: the kernel-devel install may not be needed; it's not removed in
#  uninstall but try to install it because it's not guaranteed to be there
yum install -y rpm-build kernel-devel-`uname -r` gcc
rpmbuild -ba --target $ARCH --define "kernel `uname -r`" /usr/src/redhat/SPECS/aufs.spec
rpm -iv /usr/src/redhat/RPMS/$ARCH/*aufs*.rpm

# install aufs postupdate script so it will get rebuilt when kernel is rebuilt
mkdir -p /opt/etc/osupdate.d
cp $SCRIPTDIR/aufs.postupdate /opt/etc/osupdate.d
# and run it now in case an osupdate happened before this install
/opt/etc/osupdate.d/aufs.postupdate

# create srv directory if it isn't there yet
NETSRVDIR="/net/vm08/oasis-share/srv/$MYSHORTNAME"
if [ ! -d $NETSRVDIR ]; then
    mkdir $NETSRVDIR
    setfacl -b $NETSRVDIR
    chmod 755 $NETSRVDIR
fi

# mount srv directory permanently at /srv
if ! grep -q "[ \t]/srv[ \t]" /etc/fstab; then
    # the sed changes "/net/vm08" in $NETSRVDIR to "vm08:"
    echo "`echo $NETSRVDIR|sed 's,/net/\([^/]*\),\1:,'` /srv	nfs 	defaults 	0 0" >>/etc/fstab
fi
mkdir -p /srv

# need netfs to mount NFS at boot
chkconfig netfs on
service netfs start


# create symlinks for important log directories out to the big disk
for LOGD in cvmfs httpd squid; do
    mkdir -p /srv/log/$LOGD
    rm -rf /var/log/$LOGD
    ln -s /srv/log/$LOGD /var/log
done

# squid log dir has to be owned by squid user id
chown squid:squid /srv/log/squid

# install cvmfs
curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/$CVMFSRELRPM
rpm -i $CVMFSRELRPM
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CernVM
rpm -e cvmfs-release
rm $CVMFSRELRPM
CVRPMS="$CVMFSRPM $CVMFSSERVERRPM $CVMFSCONFIGRPM $CVMFSSERVERMONRPM"
curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-$CVMFSVER/$CVMFSRPM
curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-$CVMFSVER/$CVMFSSERVERRPM
curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-config/$CVMFSCONFIGRPM
curl -O https://ecsft.cern.ch/dist/cvmfs/cvmfs-servermon/$CVMFSSERVERMONRPM
# need nogpg for now because cvmfs-servermon is not yet signed
yum -y --nogpg install $CVRPMS
rm $CVRPMS
cp /etc/cvmfs/keys/egi.eu/egi.eu.pub /etc/cvmfs/keys
cp /etc/cvmfs/keys/opensciencegrid.org/opensciencegrid.org.pub /etc/cvmfs/keys
yum -y install mod_wsgi

echo -e "*\t\t-\tnofile\t\t16384" >>/etc/security/limits.conf
ulimit -n 16384

# install oasis
wget -N http://koji-hub.batlab.org/mnt/koji/packages/oasis-goc/$OASISVER/$OASISSUBVER/noarch/$OASISRPM
wget -N http://koji-hub.batlab.org/mnt/koji/packages/oasis-goc/$OASISVER/$OASISSUBVER/noarch/$OASISRPM2
yum -y install $OASISRPM $OASISRPM2
rm $OASISRPM $OASISRPM2
chkconfig oasis-replica-initclean on

service gociptables restart

chkconfig httpd on
service httpd start

cat >>/etc/sysctl.conf <<xEOFx
# Controls maximum listen() backlog for apache.  Added by install script.
net.core.somaxconn = 1024
xEOFx
sysctl -w net.core.somaxconn=1024

# install frontier-squid & frontier-awstats
wget -q -N http://frontier.cern.ch/dist/rpms/RPMS/noarch/$FRONTIERRELRPM
rpm -i $FRONTIERRELRPM
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-cern-frontier
rpm -e frontier-release
wget -q -N http://frontier.cern.ch/dist/rpms/RPMS/$ARCH/$SQUIDRPM
wget -q -N http://frontier.cern.ch/dist/rpms/RPMS/noarch/$AWSTATSRPM
yum -y install $SQUIDRPM $AWSTATSRPM
rm $FRONTIERRELRPM $SQUIDRPM $AWSTATSRPM

# maximum space used by logs is roughly 3 times this setting
echo "export SQUID_MAX_ACCESS_LOG=1G" >/etc/sysconfig/frontier-squid
cat >/etc/squid/customize.sh <<"xEOFx"
#!/bin/bash
# Created by install script.  Will be recreated next reinstall.

awk --file `dirname $0`/customhelps.awk --source '{

# cache only api calls
insertline("^http_access deny all", "acl CVMFSAPI urlpath_regex ^/cvmfs/[^/]*/api/")
insertline("^http_access deny all", "cache deny !CVMFSAPI")

# port 80 is also supported, through an iptables redirect
setoption("http_port", "8000 accel defaultsite=localhost:8081")
insertline("^http_port", "cache_peer localhost parent 8081 0 no-query originserver")

# allow incoming http accesses from anywhere
# all requests will be forwarded to the originserver
commentout("http_access allow NET_LOCAL")
insertline("^http_access deny all", "http_access allow all")

# do not let squid cache DNS entries more than 5 minutes
setoption("positive_dns_ttl", "5 minutes")

# set shutdown_lifetime to 0 to avoid giving new connections error 
# codes, which get cached upstream
setoption("shutdown_lifetime", "0 seconds")

# turn off collapsed_forwarding to prevent slow clients from slowing down faster ones
setoption("collapsed_forwarding", "off")

print
}'
xEOFx
chmod +x /etc/squid/customize.sh
chkconfig frontier-squid on
service frontier-squid start

# install frontier-awstats password if available
APWFILE=/srv/etc/awstats/password-file
if [ ! -f $APWFILE ]; then
    case $MYSHORTNAME in
	*-itb)
	    # make a copy from production
	    SRCAPWFILE="`echo $NETSRVDIR|sed 's/-itb//'`/etc/awstats/password-file"
	    if [ -f $SRCAPWFILE ]; then
		mkdir -p `dirname $APWFILE`
		cp $SRCAPWFILE $APWFILE
	    fi
	    ;;
    esac
fi
if [ -f $APWFILE ]; then
    cp $APWFILE /etc/awstats
    chown squid:squid /etc/awstats/password-file
fi

# need nfslock for the repos to be on NFS
chkconfig nfslock on
service nfslock start

# on itb install also the oasis-itb pub key and read from oasis-itb
EXTRAPUBKEY=""
case $MYSHORTNAME in
    *-itb)
	cp "`echo $NETSRVDIR|sed 's/-replica-itb//'`"/etc/cvmfs/oasis-itb.opensciencegrid.org.pub /etc/cvmfs/keys
	EXTRAPUBKEY="/etc/cvmfs/keys/oasis-itb.opensciencegrid.org.pub"
	ITB="-itb"
	;;
    *)
	ITB=""
	;;
esac

REPOURLS=""
for REPO in oasis config-osg; do
    REPOURLS="$REPOURLS http://oasis$ITB.opensciencegrid.org:8000/cvmfs/$REPO.opensciencegrid.org"
done
ALLREPOURLS="$REPOURLS"

# add repos hosted on our stratum 0
for URL in $REPOURLS; do
    add_osg_repository -a "$URL" $EXTRAPUBKEY
done

# add other repos not registered in OIM
REPOURLS="http://cvmfs-stratum0.gridpp.rl.ac.uk:8000/cvmfs/config-egi.egi.eu"
ALLREPOURLS="$ALLREPOURLS $REPOURLS"
for URL in $REPOURLS; do
    add_osg_repository -a "$URL"
done

# Add repos registered in OIM.  It's OK if these fail because they will
#  be added later by the generate_replicas cron.
REPOURLS="`print_osg_repos -u`"
ALLREPOURLS="$ALLREPOURLS $REPOURLS"
for URL in $REPOURLS; do
    add_osg_repository -a "$URL" || true
done

# make copies of .cvmfswhitelists from oasis
mkdir -p /oasissrv/cvmfs
/usr/share/oasis/replicate_whitelists

# do initial snapshots for those repos that need it
for URL in $ALLREPOURLS; do
    REPO="`basename $URL`"
    if [ ! -f /srv/cvmfs/$REPO/.cvmfspublished ]; then
	cvmfs_server snapshot $REPO
    fi
done

# add cron entries
mkdir -p /var/log/cvmfs
cat >>/etc/cron.d/cvmfs <<'xEOFx'
# Created by install script.  Will be recreated next reinstall.
0,15,30,45 * * * * root test -d /srv/cvmfs||exit;cvmfs_server snapshot -ai
5,20,35,50 * * * * root     (PATH=$PATH:/usr/sbin /usr/share/oasis/generate_replicas; /usr/share/oasis/replicate_whitelists) >>/var/log/cvmfs/generate_replicas.log 2>&1
*/3 * * * * root   /usr/share/oasis/oasis_replica_status >/dev/null 2>&1
0 9 * * * root     find /srv/cvmfs/*.*/data/txn -name "*.*" -mtime +2 2>/dev/null|xargs rm -f
xEOFx

set +x
echo 
echo "Installation of $MYSHORTNAME completed successfully at `date`"
